

https://docs.github.com/pt/rest/guides/getting-started-with-the-rest-api
https://docs.github.com/pt/rest/reference/actions#secrets



curl \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/orgs/ORG/actions/secrets
  
  
curl \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/octocat/hello-world/actions/secrets
  
  
curl \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/mlucasdasilva/minhaweb/actions/secrets
  
curl  -u mlucasdasilva \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/mlucasdasilva/minhaweb/actions/secrets
  
curl \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/octocat/hello-world/actions/secrets/SECRET_NAME
  
curl https://api.github.com/zen

curl https://api.github.com/users/defunkt
curl https://api.github.com/users/mlucasdasilva

curl -i -u your_username https://api.github.com/users/octocat

curl -i -u mlucasdasilva https://api.github.com/users/mlucasdasilva

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

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



python3

from base64 import b64encode
from nacl import encoding, public
def encrypt(public_key: str, secret_value: str) -> str:
"""Encrypt a Unicode string using the public key."""
public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
sealed_box = public.SealedBox(public_key)
encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
return b64encode(encrypted).decode("utf-8")



#!/usr/bin/python3
from base64 import b64encode
from nacl import encoding, public
def encrypt(public_key: str, secret_value: str) -> str:
#"""Encrypt a Unicode string using the public key."""
 public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
 sealed_box = public.SealedBox(public_key)
 encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
 return b64encode(encrypted).decode("utf-8")

#!/usr/bin/python3
from base64 import b64encode
from nacl import encoding, public
def encrypt(public_key: str, secret_value: str) -> str:
#"""Encrypt a Unicode string using the public key."""
 print(public_key)
 print(secret_value)
 print(public_key.encode("utf-8"))
 print()
 public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
 sealed_box = public.SealedBox(public_key)
 encrypted = sealed_box.encrypt(secret_value.encode("utf-8"))
 return b64encode(encrypted).decode("utf-8")
encrypt('123456789ABCDEF0123456789ABCDEF',"0123456789ABCDEF0123456789ABCDEF")

$ ./t.py
123456789ABCDEF0123456789ABCDEF
0123456789ABCDEF0123456789ABCDEF
b'123456789ABCDEF0123456789ABCDEF'

Traceback (most recent call last):
  File "./t.py", line 16, in <module>
    encrypt('123456789ABCDEF0123456789ABCDEF',"0123456789ABCDEF0123456789ABCDEF")
  File "./t.py", line 10, in encrypt
    public_key = public.PublicKey(public_key.encode("utf-8"), encoding.Base64Encoder())
  File "/usr/lib/python3/dist-packages/nacl/public.py", line 37, in __init__
    self._public_key = encoder.decode(public_key)
  File "/usr/lib/python3/dist-packages/nacl/encoding.py", line 73, in decode
    return base64.b64decode(data)
  File "/usr/lib/python3.8/base64.py", line 87, in b64decode
    return binascii.a2b_base64(s)
binascii.Error: Incorrect padding
$ 


curl \
  -X PUT \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/octocat/hello-world/actions/secrets/SECRET_NAME \
  -d '{"encrypted_value":"encrypted_value"}'

curl \
  -X DELETE \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/octocat/hello-world/actions/secrets/SECRET_NAME


